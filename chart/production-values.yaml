---
image:
  tag: 0.6.0
persistence:
  storageClass: r3c-prod-client-nfs
resources:
  requests:
    cpu: "250m"
    memory: "1Gi"
  limits:
    cpu: "500m"
    memory: "2Gi"
schedule: "*/2 * * * *"
env:
  RDDL_NODES: |+
    '[
    {"uri":"http://node1-rddl-testnet.twilightparadox.com:9984","pub":"4dtjJJAHngcLSd1BFpfJVcvubSye8zA8H5cAdDtAdLMJ"},
    {"uri":"http://node2-rddl-testnet.twilightparadox.com:9984","pub":"McGeAMUVpaURm2nfHym5pEXMFCHoHoJtwTportcJNd8"},
    {"uri":"http://node3-rddl-testnet.twilightparadox.com:9984","pub":"6wELv3KjtPPEznXYSfjBeZYjBsdx91prUDKJBxwgRhb2"},
    {"uri":"http://node4-rddl-testnet.twilightparadox.com:9984","pub":"9tZ3twvWYeELvbdSYR9FdQJM3tYu9iRQ4u6nnqqfQ62v"},
    {"uri":"http://node5-rddl-testnet.chickenkiller.com:9984","pub":"2eBpuzzscZVGgmxfCH9DakpH4zAZSXYZLnrs6tSgBwsK"}
    ]'

influxdb:
  auth:
    admin:
      password: '#Set in ArgoCD'
      token: '#Set in ArgoCD'
    user:
      username: rddl
      password: '#Set in ArgoCD'
      org: rddl_network
      bucket: validator_notarization_name
    readUser:
      username: read
      password: '#Set in ArgoCD'
    writeUser:
      username: write
      password: '#Set in ArgoCD'
  fullnameOverride: influxdb
  persistence:
    storageClass: r3c-prod-client-nfs

grafana:
  admin:
    password: '#Set in ArgoCD'
  config:
    useGrafanaIniFile: true
    grafanaIniConfigMap: grafana-ini
  extraDeploy:
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: grafana-ini
      data:
        grafana.ini: |
          [auth.anonymous]
          enabled = true
          org_name = RDDL
          org_role = Viewer
          hide_version = true
  fullnameOverride: grafana
  grafana:
    initContainers:
      - name: init-influxdb
        image: busybox:1.28
        command: ['sh', '-c', "until nc -vz influxdb 8086; do echo waiting for influxdb; sleep 2; done"]
      - name: init-prometheus
        image: busybox:1.28
        command: ['sh', '-c', "until nc -vz prometheus-server 80; do echo waiting for prometheus-server; sleep 2; done"]
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    enabled: true
    ingressClassName: haproxy
    hostname: info.rddl.io
    tls: true
  persistence:
    storageClass: r3c-prod-client-nfs

prometheus:
  alertmanager:
    config:
      receivers:
        - name: mail-receiver
          email_configs:
            - to: it@riddleandcode.com
              send_resolved: true
              from: bot@riddleandcode.com
              smarthost: smtp.gmail.com:587
              auth_username: bot@riddleandcode.com
              auth_identity: bot@riddleandcode.com
              auth_password: '#Set in ArgoCD'
      route:
        group_wait: 10s
        group_interval: 5m
        repeat_interval: 24h
        receiver: mail-receiver
    ingress:
      enabled: true
      className: haproxy-int
      hosts:
        - host: alertmanager.rddl.int
          paths:
            - path: /
              pathType: ImplementationSpecific
    fullnameOverride: alertmanager
    persistence:
      storageClass: r3c-prod-client-nfs
  server:
    ingress:
      enabled: true
      ingressClassName: haproxy-int
      hosts:
        - prometheus.rddl.int
    fullnameOverride: prometheus-server
    persistentVolume:
      storageClass: r3c-prod-client-nfs
  serverFiles:
    alerting_rules.yml:
      groups:
        - name: Transactions
          rules:
            - alert: Unconfirmed Transactions
              expr: tendermint_mempool_size >= 10
              for: 5m
              labels:
                severity: page
              annotations:
                description: '{{ $labels.instance }} has more than 10 unconfirmed transactions for more than 5 minutes.'
                summary: '{{ $labels.instance }} has unconfirmed transactions'
        - name: System
          rules:
            - alert: Sytem Down
              expr: up == 0
              for: 3m
              labels:
                severity: page
              annotations:
                description: '{{ $labels.instance }} System is down for more than 3 minutes.'
                summary: '{{ $labels.instance }} System is down'
        - name: Node Connections
          rules:
            - alert: Node Connections
              expr: tendermint_p2p_peers < 2
              for: 1m
              labels:
                severity: page
              annotations:
                description: '{{ $labels.instance }} has less than five validator peer connections.'
                summary: '{{ $labels.instance }} has less connections'
    prometheus.yml:
      scrape_configs:
        - job_name: 'rddl-network'
          scrape_interval: 5s
          metrics_path: /rddl-network
          static_configs:
            - targets:
              - node1-rddl-testnet.twilightparadox.com:26660
              - node2-rddl-testnet.twilightparadox.com:26660
              - node3-rddl-testnet.twilightparadox.com:26660
              - node4-rddl-testnet.twilightparadox.com:26660
              - node5-rddl-testnet.chickenkiller.com:26660
              labels:
                group: 'rddl'
  kube-state-metrics:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
